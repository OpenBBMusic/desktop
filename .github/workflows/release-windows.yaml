name: Release Windows App

on:
  push:
    tags:
      - 'v*'
  # workflow_dispatch:
  #   inputs:
  #     tag:
  #       description: 'Version tag'
  #       required: true
  #       default: 'v0.0.1'

jobs:
  release:
    name: Release Windows App
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - amd64
          - arm64

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Get version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: stable

      - name: Setup wails
        shell: bash
        run: go install github.com/wailsapp/wails/v2/cmd/wails@latest

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Build frontend
        shell: bash
        run: |
          cd frontend
          pnpm install
          pnpm build

      - name: Build Windows app
        shell: bash
        run: |
          wails build -platform windows/${{ matrix.platform }} \
          -s \
          -skipbindings	\
          -o bb-music.exe

      - name: Setup UPX
        uses: crazy-max/ghaction-upx@v3
        if: ${{ matrix.platform == 'amd64' }}
        with:
          install-only: true

      - name: Compress
        if: ${{ matrix.platform == 'amd64' }}
        run: |
          upx ./build/bin/bb-music.exe

      - name: Rename
        working-directory: ./build/bin
        run: |
          Rename-Item -Path "bb-music.exe" -NewName "bb-music-${{steps.get_version.outputs.VERSION}}-win-${{ matrix.platform }}.exe"

      - name: Upload release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: ./build/bin/*.exe
          token: ${{ secrets.GITHUB_TOKEN }}
